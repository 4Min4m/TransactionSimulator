version: 0.2

env:
  variables:
    TF_VERSION: "1.7.5"
    TF_PLAN_FILE: "tfplan"
    # TF_VAR_supabase_url and TF_VAR_supabase_key are assumed to be set
    # as environment variables in your CodeBuild project settings (or passed by CodePipeline)
    # and will be automatically picked up by Terraform.

phases:
  install:
    runtime-versions:
      nodejs: 20
      python: 3.11
    commands:
      - echo "Installing Terraform..."
      - mkdir -p /tmp/terraform_install
      - cd /tmp/terraform_install
      - wget https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
      - unzip -o terraform_${TF_VERSION}_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - cd $CODEBUILD_SRC_DIR # Return to the root of your source directory
      - echo "Verifying Terraform installation..."
      - terraform --version

  build:
    commands:
      - echo "Loading Lambda S3 location from previous stage..."
      # This command sources the build.env file from the LambdaPackageArtifact,
      # making LAMBDA_S3_BUCKET and LAMBDA_S3_KEY available as environment variables.
      - source LambdaS3LocationArtifact/build.env
      - echo "LAMBDA_S3_BUCKET=$LAMBDA_S3_BUCKET"
      - echo "LAMBDA_S3_KEY=$LAMBDA_S3_KEY"

      - echo "Initializing Terraform..."
      - cd terraform # Navigate into your Terraform configuration directory
      # Now that backend is defined in backend.tf, we just need to init.
      # -reconfigure is good practice to ensure it re-reads the backend config.
      - terraform init -reconfigure

      - echo "Running Terraform plan..."
      # Pass LAMBDA_S3_BUCKET and LAMBDA_S3_KEY as Terraform variables.
      # Terraform will automatically pick up TF_VAR_supabase_url and TF_VAR_supabase_key
      # from the CodeBuild environment variables.
      - terraform plan -var="lambda_s3_bucket=${LAMBDA_S3_BUCKET}" -var="lambda_s3_key=${LAMBDA_S3_KEY}" -out=${TF_PLAN_FILE}

  post_build:
    commands:
      - echo "Uploading Terraform plan artifact..."
      # Move the generated plan file from the 'terraform' directory to the CodeBuild artifact path.
      - mv ${TF_PLAN_FILE} $CODEBUILD_SRC_DIR/
      - echo "Terraform plan completed and artifact uploaded."

artifacts:
  files:
    - 'tfplan' # The plan file is now at the root of the artifact
  discard-paths: yes # Ensures only the plan file is included in the artifact
  name: TerraformPlanArtifact # Name of the artifact for CodePipeline