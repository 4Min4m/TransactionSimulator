# buildspec-terraform-apply.yml
version: 0.2

phases:
  install:
    commands:
      - echo "Installing Terraform..."
      - wget https://releases.hashicorp.com/terraform/1.7.5/terraform_1.7.5_linux_amd64.zip
      - unzip terraform_1.7.5_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - rm terraform_1.7.5_linux_amd64.zip
      - terraform version
      - echo "Terraform installed."

  pre_build:
    commands:
      - echo "Changing directory to terraform/"
      - cd terraform
      - echo "Sourcing Lambda S3 location variables..."
      - source ../LambdaS3LocationArtifact/build.env
      - echo "LAMBDA_S3_BUCKET is: $LAMBDA_S3_BUCKET"
      - echo "LAMBDA_S3_KEY is: $LAMBDA_S3_KEY"
      - echo "Initializing Terraform for apply..."
      - terraform init -backend-config="bucket=transaction-simulator-terraform-tfstate" -backend-config="key=transaction-simulator/terraform.tfstate" -backend-config="region=us-east-1"

  build:
    commands:
      - echo "Applying Terraform changes..."
      # Pass the S3 bucket and key as Terraform variables when applying the plan
      - terraform apply -auto-approve tfplan -var="lambda_s3_bucket=$LAMBDA_S3_BUCKET" -var="lambda_s3_key=$LAMBDA_S3_KEY"

  post_build:
    commands:
      - echo "Running terraform output to capture infrastructure details..."
      # Output infrastructure details as JSON for downstream stages (e.g., smoke tests)
      - terraform output -json > ../terraform-output.json

artifacts:
  files:
    - terraform-output.json # Capture the output
  discard-paths: no # Keep the path